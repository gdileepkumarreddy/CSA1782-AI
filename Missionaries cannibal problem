from collections import deque

def is_valid_state(state):
    missionaries_left, cannibals_left, boat_left = state
    missionaries_right = 3 - missionaries_left
    cannibals_right = 3 - cannibals_left

    if missionaries_left < 0 or missionaries_left > 3 or missionaries_right < 0 or missionaries_right > 3:
        return False
    if cannibals_left < 0 or cannibals_left > 3 or cannibals_right < 0 or cannibals_right > 3:
        return False
    if (missionaries_left > 0 and missionaries_left < cannibals_left) or (missionaries_right > 0 and missionaries_right < cannibals_right):
        return False
    return True

def get_valid_moves(state):
    moves = []
    missionaries_left, cannibals_left, boat_left = state

    for m in range(3):
        for c in range(3):
            if m + c > 2 or m + c == 0:
                continue

            new_state = (missionaries_left - boat_left * m, cannibals_left - boat_left * c, 1 - boat_left)
            if is_valid_state(new_state):
                moves.append((m, c))
    
    return moves

def solve_missionaries_cannibals():
    initial_state = (3, 3, 1)  # Initial state (3 missionaries and 3 cannibals on the left bank)
    goal_state = (0, 0, 0)  # Goal state (all missionaries and cannibals on the right bank)

    visited = set()
    queue = deque([(initial_state, [])])  # Queue of states with their path

    while queue:
        current_state, current_path = queue.popleft()
        visited.add(current_state)

        if current_state == goal_state:
            return current_path

        valid_moves = get_valid_moves(current_state)
        for move in valid_moves:
            new_state = (
                current_state[0] - current_state[2] * move[0],
                current_state[1] - current_state[2] * move[1],
                1 - current_state[2]
            )
            if new_state not in visited:
                new_path = current_path + [move]
                queue.append((new_state, new_path))
    
    return None

solution = solve_missionaries_cannibals()

if solution:
    print("Solution found:")
    for move in solution:
        print(f"{move[0]} missionaries and {move[1]} cannibals cross the river.")
else:
    print("No solution found.")
